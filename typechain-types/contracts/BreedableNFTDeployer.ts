/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export type Vector2Struct = { x: BigNumberish; y: BigNumberish };

export type Vector2StructOutput = [BigNumber, BigNumber] & {
  x: BigNumber;
  y: BigNumber;
};

export type PicturePartCategoryStruct = {
  name: string;
  position: Vector2Struct;
  picturesUris: string[];
};

export type PicturePartCategoryStructOutput = [
  string,
  Vector2StructOutput,
  string[]
] & { name: string; position: Vector2StructOutput; picturesUris: string[] };

export type BreedableNFTConstructorArgsStruct = {
  _name: string;
  _symbol: string;
  _breedingFeeInWei: BigNumberish;
  _fatherGeneChance: BigNumberish;
  _motherGeneChance: BigNumberish;
  _breederContractAddress: string;
  _categories: PicturePartCategoryStruct[];
};

export type BreedableNFTConstructorArgsStructOutput = [
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  string,
  PicturePartCategoryStructOutput[]
] & {
  _name: string;
  _symbol: string;
  _breedingFeeInWei: BigNumber;
  _fatherGeneChance: BigNumber;
  _motherGeneChance: BigNumber;
  _breederContractAddress: string;
  _categories: PicturePartCategoryStructOutput[];
};

export interface BreedableNFTDeployerInterface extends utils.Interface {
  functions: {
    "deploy((string,string,uint256,uint256,uint256,address,(string,(uint256,uint256),string[])[]))": FunctionFragment;
  };

  getFunction(nameOrSignatureOrTopic: "deploy"): FunctionFragment;

  encodeFunctionData(
    functionFragment: "deploy",
    values: [BreedableNFTConstructorArgsStruct]
  ): string;

  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;

  events: {
    "BreedableNFTDeployed(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BreedableNFTDeployed"): EventFragment;
}

export interface BreedableNFTDeployedEventObject {
  contractAddress: string;
  deployer: string;
}
export type BreedableNFTDeployedEvent = TypedEvent<
  [string, string],
  BreedableNFTDeployedEventObject
>;

export type BreedableNFTDeployedEventFilter =
  TypedEventFilter<BreedableNFTDeployedEvent>;

export interface BreedableNFTDeployer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BreedableNFTDeployerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    deploy(
      args: BreedableNFTConstructorArgsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  deploy(
    args: BreedableNFTConstructorArgsStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    deploy(
      args: BreedableNFTConstructorArgsStruct,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "BreedableNFTDeployed(address,address)"(
      contractAddress?: string | null,
      deployer?: string | null
    ): BreedableNFTDeployedEventFilter;
    BreedableNFTDeployed(
      contractAddress?: string | null,
      deployer?: string | null
    ): BreedableNFTDeployedEventFilter;
  };

  estimateGas: {
    deploy(
      args: BreedableNFTConstructorArgsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    deploy(
      args: BreedableNFTConstructorArgsStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
